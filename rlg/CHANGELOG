########## CHANGELOG ##########

v1.01 -------
1/19/2017 - Started project
1/20/2017 - Added print(char *g[Ymax][Xmax]), int *make_rooms(int ret[], size)
1/20/2017 - Added struct room to store room parameters
1/21/2017 - Changed make_rooms(int *ret,size) to void and use a pointer of struct room arr[]
1/21/2017 - Fixed a bug in make_rooms() where rooms were sometimes printing below required
              sizes (missing parenthesis in modulo formula on rand())
1/21/2017 - Added connect_rooms(char *grid[Ymax][Xmax], int *ret, size)
1/22/2017 - Initial implementation simply connects rooms directly in order from array. Will implement Dijkstra's algorithm next

v1.02 ------
1/26/2017 - Significant changes, added large amounts of Dr. Sheaffer's implementation from assignment1.01: including
1/26/2017     various macros, terrain_type enum, struct queue_node, smooth_hardness function
1/27/2017 - Added read_to_file(_dungeon *d, char *path) function, initially using fscanf() *later changed to fread()*
1/28/2017 - Added save_to_file(_dungeon *d, char *path) using fwrite()
1/28/2017 - Added string concatination to get path
1/28/2017 - Added command line handling for --load and --save switches
1/29/2017 - Added parameter that allows loading of custom file
1/31/2017 - Fixed a bug where hardness was not being saved correctly (wrong parameters for fwrite)
1/31/2017 - Fixed a bug where files would sometime load correctly (was a problem with my realloc call on rooms array)
1/31/2017 - Fixed a bug where large dungeon files would infinite loop (was using 8-bit ints for dungeons with many rooms)
2/01/2017 - Added endianess checking

v1.03 ------
2/02/2017 - Fixed a bug where --load switch was not working on other machines - didn't initialize a variable declared within
              read_from_file() (Not sure why it worked without error on my machine?)
2/02/2017 - Added Dr. Sheaffer's corridor pathing algorithm
2/03/2017 - Added random pc placement
2/04/2017 - Added parameters to load pc into specified coordinates --pc (y x) --- no error checking so be sure to include coordinates
2/04/2017 - Added --rand (seed) parameter and shorthand parameter options -l -s -r -p
2/05/2017 - Added pathfinding() function containing 2 modified implementations of Dr. Sheaffer's Dijkstra's Algorithm
              Cost for for nontunneling moonster map increments by 1, while cost for tunneling monster map increments by
              weighted value of hardness between 0 and 3. Array of paths is stored in dungeon struct for maps.
2/06/2017 - Fixed a bug where tunneling monster algorithm was updating costs incorrectly, was adding weights of 0 for cells with
              hardness of 0
2/06/2017 - Fixed a bug where tunneling monster map was calculating incorrectly - was accidentally checking 7 neighbors instead of 8

v1.04 ------
2/08/2017 - Added pc movement, pc just moves around te edges of the first room in rooms array
2/08/2017 - Added monsters and monster array -- monsters are added randomly throughout rooms
2/10/2017 - Began adding move_npc() function
             - Added eratic monsters
             - Added smart telepathic non tunneling monsters
2/11/2017 - Added npc.prev to keep track of what terrain was before stepping on it - did not yet implement 2d character array
2/13/2017 - Completed smart npcs (non telepathic monsters use check_los() and check_cur_room())
2/15/2017 - Finished non smart npcs
2/17/2018 - Added handle_killing() for when characters step onto the same location
2/18/2017 - Fixed a bug where monsters were tracking los incorrectly (check_cur_room() was wrong)
2/18/2017 - Added search_for_pc() -- npcs store a new corridor_path array to the next room in the array to search
2/20/2017 - Fixed a bug where non-smart non-telepathic monsters were moving incorrectly
2/20/2017 - Implemented heap for character events (was just using an array)
2/22/2017 - Fixed various monster movement bugs

v1.05 ------
2/27/2017 - Added character array to store npc positions
2/28/2017 - Added ncurses
2/28/2017 - Initialized PC controls -- all pc moves now work (still no look mode)
3/01/2017 - Added look mode and full alternative PC control options
3/02/2017 - Fixed various bugs with look mode screen sizing and movement
3/03/2017 - Added stairs - still very buggy (not all npcs disappear on new levels)
3/04/2017 - Various bug fixes, including game hanging when entering new room and npcs 
              being stuck in walls 
3/06/2017 - Stopped npcs from killing eachother 

v1.06 ------
3/08/2017 - Converted to more of an object oriented design -- significant reorganization
3/09/2017 - Began c++ conversion -- started converting character struct to class
3/14/2017 - Finished conversion of character, npc, pc files to c++
3/16/2017 - Started using character_util.cpp/h to act as c/c++ hybrid to allow c files to use c++ code
3/19/2017 - Finished character_util files, everything now compiles and runs correctly
3/20/2017 - Added fog of war -- new terrain map is stored in pc class and accessed through character_util
3/22/2017 - Visible terrain is now bolded, remembered terrain is not

v1.07 ------
3/23/2017 - Converted remaining c files to c++
3/25/2017 - Created characterFactory to use stringstream objects to instantiate npcs -- for now all monsters are 
              being discarded.
3/27/2017 - Added temporary string fields in character.h to hold parsed information -- will change 
3/28/2017 - Added error checking -- monsters are discarded if incorrect input is given 

v1.08 -----
3/29/2017 - Fixed file mismath error - mistyped file name
3/29/2017 - Dice stats are now parsed as dice rather than strings
3/29/2017 - Monsters are now instantiated and placed in dungeon
3/31/2017 - Monsters traits are now correctly parsed
4/02/2017 - Created item class
4/02/2017 - Items now parsed from object_desc.txt
4/04/2017 - Items now loaded into dungeon
4/05/2017 - 20 items and monster are now randomly loaded - was loading 
              from files only once.
